;; Analyzed by ClojureScript 0.0-2850
{:defs {open {:protocol-inline nil, :name figwheel.client.socket/open, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 12, :method-params ([p__25480]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{WebSocket any}, :variadic false, :max-fixed-arity 1}), :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [retry-count retried-count websocket-url build-id], :as opts}])), :test true}, close! {:protocol-inline nil, :name figwheel.client.socket/close!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, send! {:protocol-inline nil, :name figwheel.client.socket/send!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :doc "Send a end message to the server.", :test true}, socket-atom {:file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :line 37, :column 1, :end-line 37, :end-column 22, :test true, :name figwheel.client.socket/socket-atom}, message-history-atom {:file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :line 35, :column 1, :end-line 35, :end-column 31, :test true, :name figwheel.client.socket/message-history-atom}, get-websocket-imp {:protocol-inline nil, :name figwheel.client.socket/get-websocket-imp, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :name figwheel.client.socket, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {read-string cljs.reader}, :requires {cljs.reader cljs.reader, figwheel.client.utils figwheel.client.utils, utils figwheel.client.utils}, :imports nil}