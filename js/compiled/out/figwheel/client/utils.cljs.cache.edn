;; Analyzed by ClojureScript 0.0-2850
{:defs {log {:protocol-inline nil, :name figwheel.client.utils/log, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :end-column 11, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x] [level arg])), :test true}, debug-prn {:protocol-inline nil, :name figwheel.client.utils/debug-prn, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :end-column 17, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, host-env? {:protocol-inline nil, :name figwheel.client.utils/host-env?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/Keyword, :variadic false, :max-fixed-arity 0}), :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, node-env? {:protocol-inline nil, :name figwheel.client.utils/node-env?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 0}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, html-env? {:protocol-inline nil, :name figwheel.client.utils/html-env?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, *print-debug* {:file "resources/public/js/compiled/out/figwheel/client/utils.cljs", :line 5, :column 1, :end-line 5, :end-column 30, :dynamic true, :test true, :name figwheel.client.utils/*print-debug*}}, :name figwheel.client.utils, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil}